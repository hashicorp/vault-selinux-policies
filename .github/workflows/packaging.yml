name: packaging
on:
  push:
    branches:
      - gha_migration_main
  workflow_dispatch:
    inputs:
      hc-product:
        required: false
        default: vault_selinux
      hc-version:
        required: false
        default: 0.1.5
      hc-package-iteration:
        required: false
        default: '1'

env:
  HC_PRODUCT: "${{ inputs.hc-product }}"
  HC_VERSION: "${{ inputs.hc-version }}"
  HC_PACKAGE_ITERATION: "${{ inputs.hc-package-iteration }}"
  IMAGE_F31_SYSTEM: docker.mirror.hashicorp.services/fedora:31
  IMAGE_F32_SYSTEM: docker.mirror.hashicorp.services/fedora:32
  IMAGE_F33_SYSTEM: docker.mirror.hashicorp.services/fedora:33
  IMAGE_CENTOS8_SYSTEM: docker.mirror.hashicorp.services/centos:8
  IMAGE_CENTOS7_SYSTEM: docker.mirror.hashicorp.services/centos:7
  IMAGE_APT_SYSTEM: docker.mirror.hashicorp.services/circleci/buildpack-deps:bionic

jobs:
  package:
    runs-on: ubuntu-latest
    container:
      image: "${{ matrix.host-image }}"
    strategy:
      matrix:
        host-image:
        - docker.mirror.hashicorp.services/fedora:31
        - docker.mirror.hashicorp.services/fedora:32
        - docker.mirror.hashicorp.services/fedora:33
        # Centos 8 fails with Error: Failed to download metadata for repo 'appstream'
        # - docker.mirror.hashicorp.services/centos:8 
        - docker.mirror.hashicorp.services/centos:7
    steps:
    - uses: actions/checkout@v3.3.0
    - name: install make
      env:
        HOST_IMAGE: ${{ matrix.host-image }}
      shell: bash
      run: |
        if [[ "${HOST_IMAGE}" == *"fedora"* ]]; then
          echo "Installing make with dnf"
          dnf -y install make
        else
          echo "Installing make with yum"
          yum -y install make
        fi
    - name: Create linux packages
      run: echo "make package"
    # - uses: actions/upload-artifact@v3.1.1
    #   with:
    #     path: ./products/${{ inputs.hc-product }}/*.rpm
  # validate-packages:
  #   runs-on: ubuntu-latest
  #   needs:
  #   - package
  #   env:
  #     HC_PRODUCT: "${{ inputs.hc-product }}"
  #     HC_VERSION: "${{ inputs.hc-version }}"
  #     HC_PACKAGE_ITERATION: "${{ inputs.hc-package-iteration }}"
  #     IMAGE_F31_SYSTEM: docker.mirror.hashicorp.services/fedora:31
  #     IMAGE_F32_SYSTEM: docker.mirror.hashicorp.services/fedora:32
  #     IMAGE_F33_SYSTEM: docker.mirror.hashicorp.services/fedora:33
  #     IMAGE_CENTOS8_SYSTEM: docker.mirror.hashicorp.services/centos:8
  #     IMAGE_CENTOS7_SYSTEM: docker.mirror.hashicorp.services/centos:7
  #     IMAGE_APT_SYSTEM: docker.mirror.hashicorp.services/circleci/buildpack-deps:bionic
  #   strategy:
  #     matrix:
  #       target-image:
  #       - docker.mirror.hashicorp.services/fedora:31
  #       - docker.mirror.hashicorp.services/fedora:32
  #       - docker.mirror.hashicorp.services/fedora:33
  #       - docker.mirror.hashicorp.services/centos:8
  #       - docker.mirror.hashicorp.services/centos:7
  #   steps:
  #   - uses: actions/download-artifact@v3.0.1
  #     with:
  #       path: "."
  #   - name: Validate packages
  #     run: TARGET_IMAGE=${{ matrix.target-image }} ./products/${{ inputs.hc-product }}/ci/validate.sh
  # collect-packages:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: docker.mirror.hashicorp.services/circleci/buildpack-deps:bionic
  #   needs:
  #   - validate-packages
  #   env:
  #     HC_PRODUCT: "${{ inputs.hc-product }}"
  #     HC_VERSION: "${{ inputs.hc-version }}"
  #     HC_PACKAGE_ITERATION: "${{ inputs.hc-package-iteration }}"
  #     IMAGE_F31_SYSTEM: docker.mirror.hashicorp.services/fedora:31
  #     IMAGE_F32_SYSTEM: docker.mirror.hashicorp.services/fedora:32
  #     IMAGE_F33_SYSTEM: docker.mirror.hashicorp.services/fedora:33
  #     IMAGE_CENTOS8_SYSTEM: docker.mirror.hashicorp.services/centos:8
  #     IMAGE_CENTOS7_SYSTEM: docker.mirror.hashicorp.services/centos:7
  #     IMAGE_APT_SYSTEM: docker.mirror.hashicorp.services/circleci/buildpack-deps:bionic
  #   steps:
  #   - uses: actions/download-artifact@v3.0.1
  #     with:
  #       path: "."
  #   - name: Copy rpms to /tmp/circle-artifacts
  #     run: mkdir -p /tmp/circle-artifacts && cp products/${{ inputs.hc-product }}/*.rpm /tmp/circle-artifacts
  #   - uses: actions/upload-artifact@v3.1.1
  #     with:
  #       path: "/tmp/circle-artifacts"
